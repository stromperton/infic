package main

import (
	tb "gopkg.in/tucnak/telebot.v2"
)

//BotState –°–æ—Å—Ç–æ—è–Ω–∏–µ –±–æ—Ç–∞
type BotState int

const (
	//DefaultState –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–æ—Ç–∞
	DefaultState BotState = iota
	//MainMenuState –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
	MainMenuState
	EditNameState
	EditDescriptionState
	EditImageState
	AccountCheckState
	EditTextState
	EditTitleState
	EndEnumState
)

func (d BotState) String() string {
	return [...]string{
		"Default",
		"MainMenu",
		"EditNameState",
		"EditDescriptionState",
		"EditImageState",
		"AccountCheckState",
		"EditTextState",
		"EditTitleState",
		"EndEnumState",
	}[d]
}
func (d BotState) Message() string {
	return [...]string{
		"Default",
		"MainMenu",
		"–•–æ—Ä–æ—à–æ. –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –Ω–æ–≤–æ–µ <b>–Ω–∞–∑–≤–∞–Ω–∏–µ</b> –¥–ª—è —ç—Ç–æ–≥–æ –∏–Ω—Ñ–∏–∫–∞.",
		"–•–æ—Ä–æ—à–æ. –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –Ω–æ–≤–æ–µ <b>–æ–ø–∏—Å–∞–Ω–∏–µ</b> –¥–ª—è —ç—Ç–æ–≥–æ –∏–Ω—Ñ–∏–∫–∞.",
		"–•–æ—Ä–æ—à–æ. –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –Ω–æ–≤—É—é <b>–æ–±–ª–æ–∂–∫—É</b> –¥–ª—è —ç—Ç–æ–≥–æ –∏–Ω—Ñ–∏–∫–∞.",
		`üóù <b>–ê–∫–∫–∞—É–Ω—Ç</b>
...`,
		"–•–æ—Ä–æ—à–æ. –û—Ç–ø—Ä–∞–≤—å –Ω–æ–≤—ã–π <b>—Ç–µ–∫—Å—Ç</b> —ç—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è",
		"–•–æ—Ä–æ—à–æ. –û—Ç–ø—Ä–∞–≤—å –Ω–æ–≤—ã–π <b>–∑–∞–≥–æ–ª–æ–≤–æ–∫</b> –¥–ª—è —ç—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è",
		"EndEnumState",
	}[d]
}

func (d BotState) Endpoint() string {
	return "\f" + [...]string{
		"",
		"",
		"editName",
		"editDesc",
		IBtnEditImage.Unique,
		"",
		"editMessageText",
		"editMessageTitle",
		"EndEnumState",
	}[d]
}

//AdminBot Telegram ID
const AdminBot int = 303629013

var (
	RBtnRead    = tb.ReplyButton{Text: "üìï –ß–∏—Ç–∞—Ç—å"}
	RBtnAccount = tb.ReplyButton{Text: "üóù –ê–∫–∫–∞—É–Ω—Ç"}
	RBtnWrite   = tb.ReplyButton{Text: "‚úçÔ∏è –ü–∏—Å–∞—Ç—å"}

	//ReplyMain –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞
	ReplyMain = &tb.ReplyMarkup{
		ResizeReplyKeyboard: true,
		ReplyKeyboard:       [][]tb.ReplyButton{{RBtnRead}, {RBtnAccount, RBtnWrite}},
	}

	IBtnCreate        = tb.InlineButton{Text: "‚úçÔ∏è –ù–∞—á–∞—Ç—å –Ω–æ–≤—ã–π", Unique: "create"}
	IBtnRead          = tb.InlineButton{Text: "üìï –ß–∏—Ç–∞—Ç—å", Unique: "read"}
	IBtnAddLibrary    = tb.InlineButton{Text: "‚≠êÔ∏è –î–æ–±–∞–≤–∏—Ç—å –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫—É", Unique: "addLibrary"}
	IBtnRemoveLibrary = tb.InlineButton{Text: "‚ùå –£–±—Ä–∞—Ç—å –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏", Unique: "addLibrary"}
	IBtnToList        = tb.InlineButton{Text: "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É", Unique: "toList"}
	IBtnNext          = tb.InlineButton{Text: "üìÉ –î–∞–ª–µ–µ", Unique: "next"}

	IBtnEdit      = tb.InlineButton{Text: "‚úçÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", Unique: "edit"}
	IBtnPublic    = tb.InlineButton{Text: "üìñ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å", Unique: "public"}
	IBtnEditName  = tb.InlineButton{Text: "–°–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ", Unique: "editName"}
	IBtnEditDesc  = tb.InlineButton{Text: "–°–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ", Unique: "editDesc"}
	IBtnEditImage = tb.InlineButton{Text: "–°–º–µ–Ω–∏—Ç—å –æ–±–ª–æ–∂–∫—É", Unique: "editImage"}

	IBtnMyLibrary = tb.InlineButton{Text: "üìö –ú–æ—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞", Unique: "library"}
	IBtnAllListAZ = tb.InlineButton{Text: "–í—Å–µ –∏–Ω—Ñ–∏–∫–∏ (A - –Ø)", Unique: "allListAZ"}
	IBtnAllListID = tb.InlineButton{Text: "–í—Å–µ –∏–Ω—Ñ–∏–∫–∏ (ID)", Unique: "allListID"}
	IBtnRandom    = tb.InlineButton{Text: "üé≤ –°–ª—É—á–∞–π–Ω—ã–π", Unique: "random"}

	IBtnEditMessageText  = tb.InlineButton{Text: "‚úçÔ∏è –¢–µ–∫—Å—Ç", Unique: "editMessageText"}
	IBtnEditMessageTitle = tb.InlineButton{Text: "‚úçÔ∏è –ó–∞–≥–æ–ª–æ–≤–æ–∫", Unique: "editMessageTitle"}
	IBtnNewMessage       = tb.InlineButton{Text: "+", Unique: "newMessage"}

	InlineWhrite = &tb.ReplyMarkup{
		InlineKeyboard: [][]tb.InlineButton{{IBtnCreate}},
	}

	InlineInficEdit = &tb.ReplyMarkup{
		InlineKeyboard: [][]tb.InlineButton{{IBtnRead, IBtnEdit}, {IBtnEditName, IBtnEditDesc}, {IBtnEditImage, IBtnPublic}},
	}

	InlineInfic = &tb.ReplyMarkup{
		InlineKeyboard: [][]tb.InlineButton{{IBtnRead}},
	}
	InlineInficWithRemove = &tb.ReplyMarkup{
		InlineKeyboard: [][]tb.InlineButton{{IBtnRead}, {IBtnRemoveLibrary}},
	}

	InlineRead = &tb.ReplyMarkup{
		InlineKeyboard: [][]tb.InlineButton{{IBtnAllListAZ, IBtnAllListID}, {IBtnMyLibrary, IBtnRandom}},
	}

	InlineInficRead = &tb.ReplyMarkup{
		InlineKeyboard: [][]tb.InlineButton{{IBtnNext}},
	}
)
